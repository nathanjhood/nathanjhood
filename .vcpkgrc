#!/usr/bin/env sh

# Env vars for vcpkg C++ package manager tool from microsoft
# 2023 By @StoneyDSP from;
# https://learn.microsoft.com/en-us/vcpkg/users/config-environment


# This environment variable can be set to a directory to use as the root of the
# vcpkg instance. This will only be used if the vcpkg executable is not located
# within a valid root and the command line switch --vcpkg-root is unused.
# https://learn.microsoft.com/en-us/vcpkg/users/config-environment#vcpkg_root
if [ -z "${VCPKG_ROOT}" ]; then
  export VCPKG_ROOT="${HOME}/.vcpkg"
fi

# This environment variable can be set to an existing directory to use for
# storing downloads instead of the internal downloads/ directory. It should
# always be set to an absolute path.
# https://learn.microsoft.com/en-us/vcpkg/users/config-environment#vcpkg_downloads
if [ -d "${XDG_CACHE_HOME}" ]; then
  export VCPKG_DOWNLOADS="${XDG_CACHE_HOME}/vcpkg/downloads"
else
  export VCPKG_DOWNLOADS="${VCPKG_ROOT}/downloads"
fi

export VCPKG_FORCE_SYSTEM_BINARIES=true
export VCPKG_FORCE_DOWNLOADED_BINARIES=false
export VCPKG_KEEP_ENV_VARS="CMAKE_JS_INC;CMAKE_JS_SRC;CMAKE_JS_LIB;NODE_ADDON_API_DIR"

export VCPKG_BINARY_SOURCES="clear;nuget,GitHub,readwrite"
export VCPKG_USE_NUGET_CACHE=true

# https://learn.microsoft.com/en-us/vcpkg/users/binarycaching
if [ -z "${VCPKG_DEFAULT_BINARY_CACHE}" ]; then
  if [ -d "${XDG_CACHE_HOME}" ]; then
    export VCPKG_DEFAULT_BINARY_CACHE="${XDG_CACHE_HOME}/vcpkg/archives"
  else
    export VCPKG_DEFAULT_BINARY_CACHE="${HOME}/.cache/vcpkg/archives"
  fi
fi

export CXXFLAGS=-I"${VCPKG_ROOT}/installed/x64-linux/include:${CXXFLAGS}"
export CFLAGS=-I"${VCPKG_ROOT}/installed/x64-linux/include:${CFLAGS}"
export LDFLAGS=-L"${VCPKG_ROOT}/installed/x64-linux/lib:${LDFLAGS}"
export PKG_CONFIG_PATH="${VCPKG_ROOT}/installed/x64-linux/lib/pkgconfig:$PKG_CONFIG_PATH"
export CMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"

alias nuget="mono `./vcpkg/vcpkg fetch nuget | tail -n 1`"
