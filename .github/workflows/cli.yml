name: vcpkg

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build:
    strategy:
      matrix:
    os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    include:
      - os: 'windows-latest'
        triplet: 'x64-windows'
        mono: ''
      - os: 'ubuntu-latest'
        triplet: 'x64-linux'
        # To run `nuget.exe` on non-Windows platforms, we must use `mono`.
        mono: 'mono'
      - os: 'macos-latest'
        triplet: 'x64-macos'
        mono: ''

  steps:
    - name: 'Bootstrap vcpkg'
      run: ./vcpkg/bootstrap-vcpkg

    # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      run: |
        ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source "https://nuget.pkg.github.com/StoneyDSP/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "StoneyDSP" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source "https://nuget.pkg.github.com/StoneyDSP/index.json"

    # Omit this step if you're using manifests
    - name: 'vcpkg package restore'
      shell: 'bash'
      run: >
        ./vcpkg/vcpkg install vcpkg-cmake vcpkg-cmake-config vcpkg-cmake-get-vars --triplet ${{ matrix.triplet }}
